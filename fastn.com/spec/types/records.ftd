-- ds.page: Record Types

Record type definitions and usage in FTD

-- ds.h1: Record Definition

Records define structured data types with named fields.

-- ds.code: Basic Record
lang: ftd

\-- record person:
string name:
integer age:
optional string email:

-- ds.h1: Record Usage

Once defined, records can be instantiated and used.

-- ds.code: Record Instance
lang: ftd

\-- person user:
name: Alice Smith
age: 30
email: alice@example.com

\-- ftd.text: $user.name
\-- ftd.text: Age: $user.age

-- ds.h1: Optional Fields

Record fields can be marked as optional.

-- ds.code: Optional Fields
lang: ftd

\-- record profile:
string username:
optional string bio:
optional string avatar-url:

\-- profile my-profile:
username: johndoe
bio: Software developer

-- ds.h1: Nested Records

Records can contain other record types.

-- ds.code: Nested Record Example
lang: ftd

\-- record address:
string street:
string city:
string country:

\-- record user:
string name:
address location:

\-- user current-user:
name: John Doe
location:
  street: 123 Main St
  city: New York  
  country: USA