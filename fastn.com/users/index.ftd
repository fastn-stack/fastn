-- import: bling.fifthtry.site/note

-- ds.page: Create Website using `fastn`

Welcome to the `fastn` world.

This course is for anyone irrespective of their background or technical
knowledge. No prior coding experience is required.

This document will kickstart your journey in creating a website from scratch.
You will be guided through a series of video courses that will enable you to
learn and create a website using `fastn`.

With the promise - `If you can type, you can code`, let's begin!


-- ds.h1: Using `doc-site` template

- Sign Up or Sign In on `GitHub`

- Create repository using `doc-site` template



-- ds.h1: Github pages

- After signing in, youâ€™re ready to create a repository using the business card
  template. Simply click on the button below to add the template and follow the
  steps.

  - Go to Settings (last tab) from the list of tabs
  - Select Pages from the Table of Content
  - Under Branch, click on the drop-down and choose gh-pages (by default: None)
  - Click on Save button

  This action will build your GitHub pages and deploy your website.

-- ds.h1: Editing Content

Let's see how to edit the content and utilise various components.

- Show small changes in the `index.ftd` document over the default content.

-- ds.h3: `doc-site` components

`doc-site` has a lot of powerful components that can be used. Check out the
following link to read about the components.


-- ds.h3: Markdown

Let's see how to use markdown in `fastn`.

Checkout the following video to understand all about markdown.

-- ftd.text: Markdown in doc-site
link: https://fastn.com/markdown/
open-in-new-tab: true


-- ds.markdown:

`doc-site` has a lot many components that you can use and create exciting
websites. Click here to checkout all `doc-site` components.

-- ftd.text: Doc-Site Components
link: https://fastn-community.github.io/doc-site/components/
open-in-new-tab: true




-- ds.h1: Adding some `bling` component

There are a lot of exciting `bling`components. You can use them on your fastn
web site.

-- ftd.text: Bling Components
link: https://fastn.com/featured/components/bling/
open-in-new-tab: true



-- ds.h1: Add/Update typography

Let's learn how to add or change the typography in `doc-site`

-- ftd.text: Add or change the typography
link: https://fastn.com/typography/
open-in-new-tab: true



-- ds.h1: Add/Update color-scheme

Let's learn how to add or change the typography in `doc-site`

-- ftd.text: Add or change the color-scheme
link: https://fastn.com/color-scheme/
open-in-new-tab: true


-- ds.h1: Working locally

We have created a package/repository on GitHub. It's easy to make changes on
GitHub if the project is small and `pages build and deployment` does not take
much time.

As we grow our website at organization level or full-fledged personal website,
it's preferred to `work locally` and once happy with the changes we push the
changes via creating a Pull Request and merge it in the `main` branch after
extensive review from peers.

Now, let's learn how to work locally.

-- ds.h2: Installation

To work locally you will need to clone the repository in your local machine,
and to edit project we will need a text editor, and to view the project in a
local server, we will need to install `fastn`.

Download and Install followings:


-- ds.markdown:

**Install `fastn`:** Installation of `fastn` is very easy. Just click on the
following link:

-- ftd.text: Install fastn
link: https://fastn.com/install/
open-in-new-tab: true


-- ds.markdown:

**Install a text editor:** You will need an editor to write your content that
will then render in the browser as a website.
We recommend you to use Sublime Text.

-- ftd.text: Download Sublime Text
link: https://www.sublimetext.com/3
open-in-new-tab: true


-- ds.markdown:

**Install GitHub Desktop:** This is a UI that will help you to clone your GitHub repository and push your local changes.

-- ftd.text: Download GitHub Desktop
link: https://desktop.github.com/
open-in-new-tab: true

-- note.note: For developers

If you are familiar and comfortable with Git commands on terminal/command
prompt you can ignore Install GitHub Desktop


-- ds.markdown:

Everything is setup.




-- ds.h1: Sitemap

`Sitemap` serves as a blueprint or roadmap, providing information about the
organization and hierarchy of content on the website. Let's learn how to add
Sitemap.

-- ftd.text: Sitemap in `FASTN.ftd`
link: https://fastn.com/understanding-sitemap/-/build/
open-in-new-tab: true


-- ds.h1: Redirects

Let's learn about `redirects`

-- ftd.text: Redirects in `FASTN.ftd`
link: https://fastn.com/redirects/
open-in-new-tab: true




-- ds.h1: Comments

In `fastn` you can comment a single line or an entire element.

-- ds.rendered: Single line comment

	-- ds.rendered.input:
	
	\;; This line will be commented out.  ;; <hl>
	
	This line will be displayed
	So to comment out a line in `fastn`, we use double semi-colons `;;`.
	
	
	-- ds.rendered.output:
	
		-- ds.markdown:
		
		;; This line will not be displayed.
		
		This line will be displayed.
		So to comment out a line in `fastn`, we use double semi-colons `;;`.
		
		
	-- end: ds.rendered.output

-- end: ds.rendered


-- ds.rendered: Comment an entire Section

	-- ds.rendered.input:
	
	\-- ds.markdown:
	
	The body text in `first` markdown element will be displayed.
	
	\/-- ds.markdown:
	
	The body text of `second` markdown element will be commented out.
	
	\-- ds.markdown:
	
	So to comment an entire section, we use forward slash `/`.
	
	
	-- ds.rendered.output:
	
	
		-- ds.markdown:
		
		The body text in `first` markdown element will be displayed.
		
		/-- ds.markdown:
		
		The body text of `second` markdown element will be commented out.
		
		-- ds.markdown:
		
		So to comment an entire section, we use forward slash `/`.
		
	-- end: ds.rendered.output

-- end: ds.rendered

-- ds.h1: Image

Let's see how to add image

-- ftd.text: Using Image in the documents
link: https://fastn.com/using-images/-/build/
open-in-new-tab: true


-- ds.markdown:

**Bonus:** Follow the below video and learn how to round the edges of the
image.

-- ftd.text: Create rounded border
link: https://fastn.com/rounded-border/-/build/
open-in-new-tab: true


/-- ds.h1: Hello World

Let's introduce you to the syntax of `fastn` by displaying `Hello World` in
the browser.

/-- ftd.text: First Program: Hello World
link: https://fastn.com/expander/hello-world/-/build/
open-in-new-tab: true

/-- ds.markdown:

Have you noticed that it required - one line of code - to display the text.
This is the magic and strength of `fastn`.



-- end: ds.page
